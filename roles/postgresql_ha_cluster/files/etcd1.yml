name: 'etcd-1'

data-dir: '/etc/etcd/data-dir'

wal-dir: '/etc/etcd/wal-dir'

snapshot-count: 10000

heartbeat-interval: 100

election-timeout: 1000

quota-backend-bytes: 0

# менять на каждой ноде etcd
listen-peer-urls: http://128.199.32.243:2380

listen-client-urls: http://128.199.32.243:2379

max-snapshots: 5

max-wals: 5

cors:

# менять на каждой ноде etcd
initial-advertise-peer-urls: http://128.199.32.243:2380

 # менять на каждой ноде etcd
advertise-client-urls: http://128.199.32.243:2379

# Discovery URL used to bootstrap the cluster.
discovery:

# Valid values include 'exit', 'proxy'
discovery-fallback: 'proxy'

# HTTP proxy to use for traffic to discovery service.
discovery-proxy:

# DNS domain used to bootstrap initial cluster.
discovery-srv:

# Initial cluster configuration for bootstrapping.
initial-cluster: etcd-1=http://128.199.32.243:2380,etcd-2=http://64.227.64.50:2380,etcd-3=http://128.199.32.77:2380

# Initial cluster token for the etcd cluster during bootstrap.
initial-cluster-token: 'etcd-cluster-token'

# Initial cluster state ('new' or 'existing').
initial-cluster-state: 'new'

# Reject reconfiguration requests that would cause quorum loss.
strict-reconfig-check: false

# Accept etcd V2 client requests
enable-v2: true

# Enable runtime profiling data via HTTP server
enable-pprof: true

# Valid values include 'on', 'readonly', 'off'
proxy: 'off'

# Time (in milliseconds) an endpoint will be held in a failed state.
proxy-failure-wait: 5000

# Time (in milliseconds) of the endpoints refresh interval.
proxy-refresh-interval: 30000

# Time (in milliseconds) for a dial to timeout.
proxy-dial-timeout: 1000

# Time (in milliseconds) for a write to timeout.
proxy-write-timeout: 5000

# Time (in milliseconds) for a read to timeout.
proxy-read-timeout: 0

client-transport-security:
  # Path to the client server TLS cert file.
  cert-file:

  # Path to the client server TLS key file.
  key-file:

  # Enable client cert authentication.
  client-cert-auth: false

  # Path to the client server TLS trusted CA cert file.
  trusted-ca-file:

  auto-tls: false

peer-transport-security:

  cert-file:

  key-file:

  client-cert-auth: false

  trusted-ca-file:

  auto-tls: false

debug: false

logger: zap

log-outputs: [stderr]

force-new-cluster: false

auto-compaction-mode: periodic
auto-compaction-retention: "1"
